#!/usr/bin/env bash

SCRIPT_TITLE=xopp-to-pdf
# depends=(xournalpp)
# optdepends=(libnotify)

#######

function command_exists(){
  command -v "$1" > /dev/null
}

function notify() {
    # $1: Message summary
    # $2: Message body
    # $3-n: notify-send options

    if command_exists notify-send; then
        notify-send "$@";
    else
      # Write message to stderr
      printf '%s: %s\n' "$1" "$2" 1>&2;
    fi
}

if ! command_exists xournalpp; then
  notify "${SCRIPT_TITLE}" 'The dependency "xournalpp" is missing!' --icon=dialog-information;
  exit 1;
fi

# read newline-delimited paths of selected files (on local filesystem)
echo "$NAUTILUS_SCRIPT_SELECTED_FILE_PATHS" | while read file; do
  # If $NAUTILUS_SCRIPT_SELECTED_FILE_PATHS contains a tailing newline,
  # $file may be the empty string
  if [ "${file}" = '' ]; then
    continue;
  fi

  out="${file}".pdf;

  if [ -f "${out}" ]; then
    notify "${SCRIPT_TITLE}" "The file ${out} does already exist! Skipping conversion of $(basename "${file}")" --icon=dialog-information;
  else
    xournalpp --create-pdf="${out}" "${file}" || notify "${SCRIPT_TITLE}" "Conversion of ${file} failed!" --icon=dialog-information;
  fi
done

notify "${SCRIPT_TITLE}" 'Done!' --icon=dialog-information;
